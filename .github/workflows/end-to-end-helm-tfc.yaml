name: Helm E2E on Terraform Cloud

on:
  schedule:
    - cron: '30 6 * * *'
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

env:
  KUBECONFIG: ${{ github.workspace }}/.kube/config
  USE_EXISTING_CLUSTER: true
  DOCKER_IMAGE: tfc-operator

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: 'go.mod'
      
      - name: Set up kind
        uses: helm/kind-action@d8ccf8fb623ce1bb360ae2f45f323d9d5c5e9f00 # v1.5.0
        with:
          wait: 2m
          version: v0.17.0

      - name: Set up Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          version: v3.11.2

      - name: Generate Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=sha,format=long
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and load Docker image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}

      - name: Install Helm chart
        run: |
          helm install --wait --timeout 1m \
            this ./charts/terraform-cloud-operator \
            --set operator.image.repository=${{ env.DOCKER_IMAGE }} \
            --set operator.image.tag=${{ env.DOCKER_METADATA_OUTPUT_VERSION }} \
            --set operator.syncPeriod=30s \
            --set controllers.agentPool.workers=5 \
            --set controllers.module.workers=5 \
            --set controllers.workspace.workers=5

      - name: Run end-to-end test suite
        run: make test
        env:
          TFC_OAUTH_TOKEN: ${{ secrets.TFC_OAUTH_TOKEN }}
          TFC_ORG: ${{ secrets.TFC_ORG }}
          TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
          TFC_VCS_REPO: ${{ secrets.TFC_VCS_REPO }}
